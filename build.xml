<?xml version="1.0" encoding="UTF-8"?>

<project name="novuso-view" description="novuso view build process" default="build">

    <!-- properties -->

    <property file="build/build.properties" />

    <!-- main targets -->

    <target name="build" description="default build process for development"
            depends="prepare.dir,qa">
        <echo msg="build complete for version: ${version}" />
    </target>

    <target name="integration" description="integration testing build process"
            depends="prepare.dir,qa.int">
        <echo msg="build complete for version: ${version}" />
    </target>

    <target name="build.ci" description="build process for continuous integration server"
            depends="prepare.dir,qa.ci">
        <echo msg="build complete for version: ${version}" />
    </target>

    <!-- dependencies -->

    <target name="install" description="installs project dependencies for development"
            depends="composer.install">
        <echo msg="project dependencies installed" />
    </target>

    <target name="composer.install" description="installs composer dependencies for development">
        <exec executable="php" passthru="true">
            <arg value="composer.phar" />
            <arg value="self-update" />
        </exec>
        <exec executable="php" passthru="true">
            <arg value="composer.phar" />
            <arg value="install" />
            <arg value="--prefer-dist" />
        </exec>
    </target>

    <target name="update" description="updates project dependencies for development"
            depends="composer.update">
        <echo msg="project dependencies updated" />
    </target>

    <target name="composer.update" description="updates composer dependencies for development">
        <exec executable="php" passthru="true">
            <arg value="composer.phar" />
            <arg value="self-update" />
        </exec>
        <exec executable="php" passthru="true">
            <arg value="composer.phar" />
            <arg value="update" />
            <arg value="--prefer-dist" />
        </exec>
    </target>

    <!-- folder setup -->

    <target name="clean.dir" description="removes generated build directories">
        <delete dir="${api.dir}" />
        <delete dir="${coverage.dir}" />
        <delete dir="${phpcb.dir}" />
        <delete dir="${pdepend.dir}" />
        <delete dir="${logs.dir}" />
        <echo msg="removed generated build directories" />
    </target>

    <target name="prepare.dir" description="prepares project directories for build"
            depends="clean.dir">
        <mkdir dir="${api.dir}" />
        <mkdir dir="${coverage.dir}" />
        <mkdir dir="${phpcb.dir}" />
        <mkdir dir="${pdepend.dir}" />
        <mkdir dir="${logs.dir}" />
        <echo msg="project directories prepared for build" />
    </target>

    <!-- quality assurance tools -->

    <target name="qa" description="runs unit testing and qa tools on source code"
            depends="phplint,phpunit,phpcs,phpmd,phpcpd">
        <echo msg="quality assurance process complete" />
    </target>

    <target name="qa.int" description="runs integration testing and qa tools on source code"
            depends="phplint,phpunit.int,phpcs,phpmd,phpcpd">
        <echo msg="quality assurance process complete" />
    </target>

    <target name="qa.ci" description="runs quality assurance tools for continuous integration"
            depends="phplint,phpunit.ci,phpcs.ci,phpmd.ci,phpcpd,phploc,pdepend">
        <echo msg="quality assurance process complete" />
    </target>

    <target name="phplint" description="performs syntax check of php sourcecode files">
        <echo msg="performing syntax check of php sourcecode files" />
        <apply executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${src.dir}">
                <include name="**/*.php" />
            </fileset>
        </apply>
        <echo msg="php sourcecode files passed syntax check" />
    </target>

    <target name="phpunit" description="runs unit tests with phpunit">
        <echo msg="running phpunit unit test suite" />
        <exec executable="php" passthru="true" returnProperty="phpunit.return">
            <arg path="${phpunit.bin}" />
            <arg value="-c" />
            <arg path="${phpunit.unit.conf}" />
        </exec>
        <if>
            <equals arg1="${phpunit.return}" arg2="0"/>
            <then>
                <echo msg="tests passed" />
            </then>
            <else>
                <fail msg="test failed" />
            </else>
        </if>
    </target>

    <target name="phpunit.int" description="runs integration tests with phpunit">
        <echo msg="running phpunit integration test suite" />
        <exec executable="php" passthru="true" returnProperty="phpunit.return">
            <arg path="${phpunit.bin}" />
            <arg value="-c" />
            <arg path="${phpunit.int.conf}" />
        </exec>
        <if>
            <equals arg1="${phpunit.return}" arg2="0"/>
            <then>
                <echo msg="tests passed" />
            </then>
            <else>
                <fail msg="test failed" />
            </else>
        </if>
    </target>

    <target name="phpunit.ci" description="runs complete test suite with phpunit">
        <echo msg="running phpunit complete test suite" />
        <exec executable="php" passthru="true" returnProperty="phpunit.return">
            <arg path="${phpunit.bin}" />
            <arg value="-c" />
            <arg path="${phpunit.ci.conf}" />
        </exec>
        <if>
            <equals arg1="${phpunit.return}" arg2="0"/>
            <then>
                <echo msg="tests passed" />
            </then>
            <else>
                <fail msg="test failed" />
            </else>
        </if>
    </target>

    <target name="phpcs" description="finds coding standards violations using phpcs">
        <echo msg="finding coding standards violations" />
        <exec executable="php" passthru="true" returnProperty="phpcs.return">
            <arg path="${phpcs.bin}" />
            <arg value="--standard=${phpcs.conf}" />
            <arg path="${src.dir}" />
        </exec>
        <if>
            <equals arg1="${phpcs.return}" arg2="0"/>
            <then>
                <echo msg="code standards passed" />
            </then>
            <else>
                <fail msg="code standards violations" />
            </else>
        </if>
    </target>

    <target name="phpcs.ci" description="logs coding standards violations using phpcs">
        <echo msg="finding coding standards violations" />
        <exec executable="php" passthru="true" returnProperty="phpcs.return">
            <arg path="${phpcs.bin}" />
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${logs.dir}/checkstyle.xml" />
            <arg value="--standard=${phpcs.conf}" />
            <arg value="--warning-severity=0" />
            <arg path="${src.dir}" />
        </exec>
        <if>
            <equals arg1="${phpcs.return}" arg2="0"/>
            <then>
                <echo msg="code standards passed" />
            </then>
            <else>
                <fail msg="code standards violations" />
            </else>
        </if>
    </target>

    <target name="phpmd" description="performs project mess detection using phpmd">
        <echo msg="performing project mess detection" />
        <exec executable="php" passthru="true" returnProperty="phpmd.return">
            <arg path="${phpmd.bin}" />
            <arg path="${src.dir}" />
            <arg value="text" />
            <arg value="${phpmd.conf}" />
        </exec>
        <if>
            <equals arg1="${phpmd.return}" arg2="0"/>
            <then>
                <echo msg="project code is clean" />
            </then>
            <else>
                <fail msg="project mess detected" />
            </else>
        </if>
    </target>

    <target name="phpmd.ci" description="logs project mess detection with phpmd">
        <echo msg="Performing project mess detection" />
        <exec executable="php" passthru="true" returnProperty="phpmd.return">
            <arg path="${phpmd.bin}" />
            <arg path="${src.dir}" />
            <arg value="xml" />
            <arg value="${phpmd.conf}" />
            <arg value="--reportfile" />
            <arg value="${logs.dir}/pmd.xml" />
        </exec>
        <if>
            <equals arg1="${phpmd.return}" arg2="0"/>
            <then>
                <echo msg="project code is clean" />
            </then>
            <else>
                <fail msg="project mess detected" />
            </else>
        </if>
    </target>

    <target name="phploc" description="measures project size using phploc">
        <echo msg="measuring project size and analyzing project structure" />
        <exec executable="php" passthru="true">
            <arg path="${phploc.bin}" />
            <arg value="--log-csv" />
            <arg value="${logs.dir}/phploc.csv" />
            <arg path="${src.dir}" />
        </exec>
    </target>

    <target name="pdepend" description="calculates software metrics using pdepend">
        <echo msg="calculating software metrics" />
        <exec executable="php" passthru="true">
            <arg path="${pdepend.bin}" />
            <arg value="--jdepend-xml=${logs.dir}/jdepend.xml" />
            <arg value="--jdepend-chart=${pdepend.dir}/dependencies.svg" />
            <arg value="--overview-pyramid=${pdepend.dir}/overview-pyramid.svg" />
            <arg path="${src.dir}" />
        </exec>
    </target>

    <target name="phpcpd" description="finds duplicate code using phpcpd">
        <echo msg="finding occurrences duplicated code" />
        <exec executable="php" passthru="true">
            <arg path="${phpcpd.bin}" />
            <arg value="--log-pmd" />
            <arg value="${logs.dir}/pmd-cpd.xml" />
            <arg path="${src.dir}" />
        </exec>
    </target>

</project>
